{"mappings":"iiBASA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA5BQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAwBC,GACtBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,OAA9Bd,EAAwBa,EAAxBb,MAAOe,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OACrBC,QAAQC,IAAIP,EAAMG,QAClBG,QAAQC,IAAIP,EAAMG,OAAOd,MAAMmB,OAC/B,IAAIC,EAAaC,OAAOrB,EAAMmB,OAC9BF,QAAQC,IAAIE,GACZ,IAAME,EAAYD,OAAON,EAAKI,OAC9BF,QAAQC,IAAII,GACZ,IAAMC,EAAcF,OAAOL,EAAOG,OAClCF,QAAQC,IAAIK,GAkBd,SAAsBvB,EAAOe,EAAMC,GACjC,IAAK,IAAIQ,EAAW,EAAGA,GAAYR,EAAQQ,GAAY,EACrD1B,EAAc0B,EAAUxB,GACrByB,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAU4B,EAAKD,EAAL1B,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAG3B,EAAQ2B,EAAR3B,SAAU4B,EAAKD,EAAL1B,MAClB4B,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAANJ,EAAM,M,IAGjD3B,GAASe,C,CA9BXmB,CAAad,EAAYE,EAAWC,GACpCZ,EAAMG,OAAOqB,O","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmiteClick);\n\nfunction onSubmiteClick(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target;\n  console.log(event.target);\n  console.log(event.target.delay.value);\n  let firstDelay = Number(delay.value);\n  console.log(firstDelay);\n  const delayStep = Number(step.value);\n  console.log(delayStep);\n  const amountValue = Number(amount.value);\n  console.log(amountValue);\n  makePromises(firstDelay, delayStep, amountValue);\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction makePromises(delay, step, amount) {\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_target","target","step","amount","console","log","value","firstDelay","Number","delayStep","amountValue","position1","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$makePromises","reset"],"version":3,"file":"03-promises.9861a4d9.js.map"}