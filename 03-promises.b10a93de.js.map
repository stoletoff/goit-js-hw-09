{"mappings":"qhBASA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5BEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAwBC,GACtBA,EAAMC,iBACN,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAMI,OACtCC,QAAQC,IAAIN,EAAMI,QAClBC,QAAQC,IAAIN,EAAMI,OAAOf,MAAMkB,OAC/B,IAAIC,EAAaC,OAAOpB,EAAMkB,OAC9BF,QAAQC,IAAIE,GACZ,MAAME,EAAYD,OAAOP,EAAKK,OAC9BF,QAAQC,IAAII,GACZ,MAAMC,EAAcF,OAAON,EAAOI,OAClCF,QAAQC,IAAIK,GAkBd,SAAsBC,EAAOV,EAAMC,GACjC,IAAK,IAAIU,EAAW,EAAGA,GAAYV,EAAQU,GAAY,EACrD1B,EAAc0B,EAAUD,GACrBE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB/B,QAAeC,MAAU,IAGnDuB,GAASV,C,CA9BXkB,CAAaZ,EAAYE,EAAWC,GACpCX,EAAMI,OAAOiB,O","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmiteClick);\n\nfunction onSubmiteClick(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target;\n  console.log(event.target);\n  console.log(event.target.delay.value);\n  let firstDelay = Number(delay.value);\n  console.log(firstDelay);\n  const delayStep = Number(step.value);\n  console.log(delayStep);\n  const amountValue = Number(amount.value);\n  console.log(amountValue);\n  makePromises(firstDelay, delayStep, amountValue);\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction makePromises(delay, step, amount) {\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","step","amount","target","console","log","value","firstDelay","Number","delayStep","amountValue","delay1","position1","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$makePromises","reset"],"version":3,"file":"03-promises.b10a93de.js.map"}